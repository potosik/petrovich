@model Petrovich.Web.Models.IPagedListViewModel

@{ 
    var maxPagesFromCurrent = 5;
    var startPage = Model.CurrentPage > maxPagesFromCurrent ? Model.CurrentPage - maxPagesFromCurrent : 1;
    var endPage = Model.TotalPages - Model.CurrentPage > maxPagesFromCurrent ? Model.CurrentPage + maxPagesFromCurrent : Model.TotalPages;
}

<div class="row">
    <div class="col-sm-5">
        <div class="dataTables_info" id="datatable_info" role="status" aria-live="polite">Отображены элементы с @Model.StartItem по @Model.LastItem из @Model.TotalCount доступных</div>
    </div>
    <div class="col-sm-7">
        <div class="dataTables_paginate paging_simple_numbers">
            <ul class="pagination">
                @if (Model.CurrentPage == 1)
                {
                    <li class="paginate_button previous disabled">
                        <a>&lt;</a>
                    </li>
                }
                else
                {
                    <li class="paginate_button previous">
                        @Html.ActionLink("<", Model.Endpoint, new { page = Model.CurrentPage - 1 }, null)
                    </li>
                }

                @for (int index = startPage; index <= endPage; index++)
                {
                    var currentPageIndex = Model.CurrentPage == index;
                    var btnClass = currentPageIndex ? "active" : String.Empty;

                    <li class="paginate_button @btnClass">
                        @if (currentPageIndex)
                        {
                            <a>@index</a>
                        }
                        else
                        {
                            @Html.ActionLink(index.ToString(), Model.Endpoint, new { page = index }, null)
                        }
                    </li>
                }

                @if (Model.CurrentPage == Model.TotalPages)
                {
                    <li class="paginate_button next disabled">
                        <a>&gt;</a>
                    </li>
                }
                else
                {
                    <li class="paginate_button next">
                        @Html.ActionLink(">", Model.Endpoint, new { page = Model.CurrentPage + 1 }, null)
                    </li>

                }
            </ul>
        </div>
    </div>
</div>